"use strict";(self.webpackChunkmx_ink_webxr_babylonjs=self.webpackChunkmx_ink_webxr_babylonjs||[]).push([[796],{7796:(e,n,a)=>{a.r(n),a.d(n,{Dispose:()=>u,DumpData:()=>d,DumpDataAsync:()=>c,DumpFramebuffer:()=>l,DumpTools:()=>f});var r=a(7084),s=a(14651),t=a(69891),i=a(40078);let p,o=null;async function l(e,n,a,r,s="image/png",t,i){const p=await a.readPixels(0,0,e,n);d(e,n,new Uint8Array(p.buffer),r,s,t,!0,void 0,i)}function c(e,n,a,r="image/png",s,t=!1,i=!1,p){return new Promise((o=>{d(e,n,a,(e=>o(e)),r,s,t,i,p)}))}function d(e,n,l,c,d="image/png",f,m=!1,w=!1,h){(async function(){return o||(o=new Promise(((e,n)=>{let s,t=null;const o={preserveDrawingBuffer:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(a.bind(a,79366)).then((({ThinEngine:l})=>{try{s=new OffscreenCanvas(100,100),t=new l(s,!1,o)}catch(e){s=document.createElement("canvas"),t=new l(s,!1,o)}i.l.Instances.pop(),i.l.OnEnginesDisposedObservable.add((e=>{t&&e!==t&&!t.isDisposed&&0===i.l.Instances.length&&u()})),t.getCaps().parallelShaderCompile=void 0;const c=new r.I(t);a.e(949).then(a.bind(a,32949)).then((({passPixelShader:a})=>{if(!t)return void n("Engine is not defined");const i=new r.H({engine:t,name:a.name,fragmentShader:a.shader,samplerNames:["textureSampler"]});p={canvas:s,engine:t,renderer:c,wrapper:i},e(p)}))})).catch(n)}))),await o})().then((a=>{if(a.engine.setSize(e,n,!0),l instanceof Float32Array){const e=new Uint8Array(l.length);let n=l.length;for(;n--;){const a=l[n];e[n]=Math.round(255*(0,t.Clamp)(a))}l=e}const r=a.engine.createRawTexture(l,e,n,5,!1,!m,1);a.renderer.setViewport(),a.renderer.applyEffectWrapper(a.wrapper),a.wrapper.effect._bindTexture("textureSampler",r),a.renderer.draw(),w?s.w1.ToBlob(a.canvas,(e=>{const n=new FileReader;n.onload=e=>{const n=e.target.result;c&&c(n)},n.readAsArrayBuffer(e)}),d,h):s.w1.EncodeScreenshotCanvasData(a.canvas,c,d,f,h),r.dispose()}))}function u(){p?(p.wrapper.dispose(),p.renderer.dispose(),p.engine.dispose()):o?.then((e=>{e.wrapper.dispose(),e.renderer.dispose(),e.engine.dispose()})),o=null,p=null}const f={DumpData:d,DumpDataAsync:c,DumpFramebuffer:l,Dispose:u};s.w1.DumpData=d,s.w1.DumpDataAsync=c,s.w1.DumpFramebuffer=l}}]);